title: "Building the 12-factor agent template from scratch"
text: "Steps to start from a bare TS repo and build up a 12-factor agent. This walkthrough will guide you through creating a TypeScript agent that follows the 12-factor methodology."

targets:
  - markdown: "./build/walkthrough.md"
    onChange:
      diff: true
      cp: true
    newFiles:
      cat: false
      cp: true
  - folders:
      path: "./build/sections"
      skip:
        - "cleanup"
      final:
        dirName: "final"

sections:
  - name: cleanup
    title: "Cleanup"
    text: "Make sure you're starting from a clean slate"
    steps:
      - text: "Clean up existing files"
        command: |
          rm -rf baml_src/ && rm -rf src/

  - name: hello-world
    title: "Chapter 0 - Hello World"
    text: "Let's start with a basic TypeScript setup and a hello world program."
    steps:
      - text: "Copy initial package.json"
        file: {src: ./walkthrough/00-package.json, dest: package.json}
      - text: "Install dependencies"
        command: |
          npm install
        incremental: true
      - text: "Copy tsconfig.json"
        file: {src: ./walkthrough/00-tsconfig.json, dest: tsconfig.json}
      - text: "Create src folder"
        dir: {create: true, path: src}
      - text: "Add a simple hello world index.ts"
        file: {src: ./walkthrough/01-index.ts, dest: src/index.ts}
      - text: "Run it to verify"
        command: |
          npx tsx src/index.ts
        results:
          - text: "You should see:"
            code: |
              hello, world!

  - name: cli-and-agent
    title: "Chapter 1 - CLI and Agent Loop"
    text: "Now let's add BAML and create our first agent with a CLI interface."
    steps:
      - text: "Install BAML"
        command: |
          npm i baml
        incremental: true
      - text: "Initialize BAML"
        command: |
          npx baml-cli init
        incremental: true
      - text: "Remove default resume.baml"
        command: |
          rm baml_src/resume.baml
        incremental: true
      - text: "Add our starter agent"
        file: {src: ./walkthrough/01-agent.baml, dest: baml_src/agent.baml}
      - text: "Generate BAML client code"
        command: |
          npx baml-cli generate
        incremental: true
      - text: "Enable BAML logging for development"
        command: |
          export BAML_LOG=debug
      - text: "Add the CLI interface"
        file: {src: ./walkthrough/01-cli.ts, dest: src/cli.ts}
      - text: "Update index.ts to use the CLI"
        file: {src: ./walkthrough/01-index.ts, dest: src/index.ts}
      - text: "Add the agent implementation"
        file: {src: ./walkthrough/01-agent.ts, dest: src/agent.ts}
      - text: "Try it out"
        command: |
          npx tsx src/index.ts hello

  - name: calculator-tools
    title: "Chapter 2 - Add Calculator Tools"
    text: "Let's add some calculator tools to our agent."
    steps:
      - text: "Add calculator tools definition"
        file: {src: ./walkthrough/02-tool_calculator.baml, dest: baml_src/tool_calculator.baml}
      - text: "Update agent to use calculator tools"
        file: {src: ./walkthrough/02-agent.baml, dest: baml_src/agent.baml}
      - text: "Generate updated BAML client"
        command: |
          npx baml-cli generate
        incremental: true
      - text: "Try out the calculator"
        command: |
          npx tsx src/index.ts 'can you add 3 and 4?'

  - name: tool-loop
    title: "Chapter 3 - Process Tool Calls in a Loop"
    text: "Now let's add a real agentic loop that can run the tools and get a final answer from the LLM."
    steps:
      - text: "Update agent with tool handling"
        file: {src: ./walkthrough/03-agent.ts, dest: src/agent.ts}
      - text: "Try a simple calculation"
        command: |
          npx tsx src/index.ts 'can you add 3 and 4?'
      - text: "Turn off BAML logs for cleaner output"
        command: |
          export BAML_LOG=off
      - text: "Try a multi-step calculation"
        command: |
          npx tsx src/index.ts 'can you add 3 and 4, then add 6 to that result?'
      - text: "Add handlers for all calculator tools"
        file: {src: ./walkthrough/03b-agent.ts, dest: src/agent.ts}
      - text: "Test subtraction"
        command: |
          npx tsx src/index.ts 'can you subtract 3 from 4?'
      - text: "Test multiplication"
        command: |
          npx tsx src/index.ts 'can you multiply 3 and 4?'
      - text: "Test a complex calculation"
        command: |
          npx tsx src/index.ts 'can you multiply 3 and 4, then divide the result by 2 and then add 12 to that result?'

  - name: baml-tests
    title: "Chapter 4 - Add Tests to agent.baml"
    text: "Let's add some tests to our BAML agent."
    steps:
      - text: "Update agent with tests"
        file: {src: ./walkthrough/04-agent.baml, dest: baml_src/agent.baml}
      - text: "Run the tests"
        command: |
          npx baml-cli test
      - text: "Add more complex test cases"
        file: {src: ./walkthrough/04c-agent.baml, dest: baml_src/agent.baml}
      - text: "Run the expanded test suite"
        command: |
          npx baml-cli test

  - name: human-tools
    title: "Chapter 5 - Multiple Human Tools"
    text: "Add support for requesting clarification from humans."
    steps:
      - text: "Update agent with clarification support"
        file: {src: ./walkthrough/05-agent.baml, dest: baml_src/agent.baml}
      - text: "Generate updated client"
        command: |
          npx baml-cli generate
        incremental: true
      - text: "Update agent implementation"
        file: {src: ./walkthrough/05-agent.ts, dest: src/agent.ts}
      - text: "Update CLI to handle clarification requests"
        file: {src: ./walkthrough/05-cli.ts, dest: src/cli.ts}
      - text: "Test clarification flow"
        command: |
          npx tsx src/index.ts 'can you multiply 3 and FD*(#F&& ?'
      - text: "Add tests for clarification"
        file: {src: ./walkthrough/05b-agent.baml, dest: baml_src/agent.baml}
      - text: "Run the tests"
        command: |
          npx baml-cli test
      - text: "Fix hello world test"
        file: {src: ./walkthrough/05c-agent.baml, dest: baml_src/agent.baml}
      - text: "Verify tests pass"
        command: |
          npx baml-cli test

  - name: customize-prompt
    title: "Chapter 6 - Customize Your Prompt with Reasoning"
    text: "Improve the agent's prompting by adding reasoning steps."
    steps:
      - text: "Update agent with reasoning steps"
        file: {src: ./walkthrough/06-agent.baml, dest: baml_src/agent.baml}
      - text: "Generate updated client"
        command: |
          npx baml-cli generate
        incremental: true

  - name: context-window
    title: "Chapter 7 - Customize Your Context Window"
    text: "Improve the context window formatting."
    steps:
      - text: "Update agent with better JSON formatting"
        file: {src: ./walkthrough/07-agent.ts, dest: src/agent.ts}
      - text: "Test the formatting"
        command: |
          BAML_LOG=info npx tsx src/index.ts 'can you multiply 3 and 4, then divide the result by 2 and then add 12 to that result?'
      - text: "Switch to XML formatting"
        file: {src: ./walkthrough/07b-agent.ts, dest: src/agent.ts}
      - text: "Test XML formatting"
        command: |
          BAML_LOG=info npx tsx src/index.ts 'can you multiply 3 and 4, then divide the result by 2 and then add 12 to that result?'
      - text: "Update tests for XML format"
        file: {src: ./walkthrough/07c-agent.baml, dest: baml_src/agent.baml}
      - text: "Run the tests"
        command: |
          npx baml-cli test

  - name: api-endpoints
    title: "Chapter 8 - Adding API Endpoints"
    text: "Add an Express server to expose the agent via HTTP."
    steps:
      - text: "Install Express and types"
        command: |
          npm install express && npm install --save-dev @types/express supertest
        incremental: true
      - text: "Add the server implementation"
        file: {src: ./walkthrough/08-server.ts, dest: src/server.ts}
      - text: "Start the server"
        command: |
          npx tsx src/server.ts
      - text: "Test with curl (in another terminal)"
        command: |
          curl -X POST http://localhost:3000/thread \
            -H "Content-Type: application/json" \
            -d '{"message":"can you add 3 and 4?"}'

  - name: state-management
    title: "Chapter 9 - In-Memory State and Async Clarification"
    text: "Add state management and async clarification support."
    steps:
      - text: "Add state management"
        file: {src: ./walkthrough/09-state.ts, dest: src/state.ts}
      - text: "Update server with state support"
        file: {src: ./walkthrough/09-server.ts, dest: src/server.ts}
      - text: "Start the server"
        command: |
          npx tsx src/server.ts
      - text: "Test clarification flow"
        command: |
          curl -X POST http://localhost:3000/thread \
            -H "Content-Type: application/json" \
            -d '{"message":"can you multiply 3 and xyz?"}'

  - name: human-approval
    title: "Chapter 10 - Adding Human Approval"
    text: "Add support for human approval of operations."
    steps:
      - text: "Update server with approval flow"
        file: {src: ./walkthrough/10-server.ts, dest: src/server.ts}
      - text: "Update agent with approval checks"
        file: {src: ./walkthrough/10-agent.ts, dest: src/agent.ts}
      - text: "Start the server"
        command: |
          npx tsx src/server.ts
      - text: "Test division with approval"
        command: |
          curl -X POST http://localhost:3000/thread \
            -H "Content-Type: application/json" \
            -d '{"message":"can you divide 3 by 4?"}'

  - name: humanlayer-approval
    title: "Chapter 11 - Human Approval with HumanLayer"
    text: "Integrate with HumanLayer for approvals."
    steps:
      - text: "Install HumanLayer"
        command: |
          npm install humanlayer
        incremental: true
      - text: "Update agent with HumanLayer integration"
        file: {src: ./walkthrough/11-agent.ts, dest: src/agent.ts}
      - text: "Update CLI with HumanLayer support"
        file: {src: ./walkthrough/11-cli.ts, dest: src/cli.ts}
      - text: "Run the CLI"
        command: |
          npx tsx src/index.ts 'can divide 4 by 5?'

  - name: humanlayer-webhook
    title: "Chapter 12 - HumanLayer Webhook Integration"
    text: "Add webhook support for HumanLayer."
    steps:
      - text: "Update server with webhook support"
        file: {src: ./walkthrough/12-server.ts, dest: src/server.ts}
      - text: "Start the server"
        command: |
          npx tsx src/server.ts